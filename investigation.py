# =============================================================================# Darvirian:  # Kaggle CORD-19-research-challenge# What do we know about virus genetics, origin, and evolution?# =============================================================================# data input: kaggle datasets download -d allen-institute-for-ai/CORD-19-research-challenge# output: # =============================================================================# Import the libraries# =============================================================================import pandas as pdimport numpy as npimport glob# =============================================================================# Read metadata# =============================================================================df_metadata = pd.read_csv('Data/CORD-19-research-challenge/metadata.csv')metadata_columns = df_metadata.columns# ['sha', 'source_x', 'title', 'doi', 'pmcid', 'pubmed_id', 'license',#        'abstract', 'publish_time', 'authors', 'journal',#        'Microsoft Academic Paper ID', 'WHO #Covidence', 'has_full_text',#        'full_text_file'] =============================================================================# Read a json file# =============================================================================import jsonwith open('Data/CORD-19-research-challenge/biorxiv_medrxiv/f905f78b32f63c6d14a79984dfb33f1b358b8ab4.json', 'r') as JSON:       json_dict = json.load(JSON)print(json_dict["metadata"])print(json_dict["metadata"]['title'])print(json_dict["metadata"]['authors'])print(json_dict["abstract"])print(json_dict["body_text"])print(json_dict)fileOutput = 'Data/output/f905f78b32f63c6d14a79984dfb33f1b358b8ab4.csv'outputFile = open(fileOutput, 'w') #load csv fileoutput = csv.writer(outputFile) #create a csv.writeoutput.writerow(json_dict[0].keys())  # header rowfor json_dict in data:    output.writerow(row.values()) #values rowimport csv, json, sys#if you are not using utf-8 files, remove the next linesys.setdefaultencoding("UTF-8") #set the encode to utf8#check if you pass the input file and output fileif sys.argv[1] is not None and sys.argv[2] is not None:    fileInput = sys.argv[1]    fileOutput = sys.argv[2]    inputFile = open(fileInput) #open json file    outputFile = open(fileOutput, 'w') #load csv file    data = json.load(inputFile) #load json content    inputFile.close() #close the input file    output = csv.writer(outputFile) #create a csv.write    output.writerow(data[0].keys())  # header row    for row in data:        output.writerow(row.values()) #values row# =============================================================================# Load all data# =============================================================================df_biorxiv_medrxiv_jsnfiles = glob.glob("Data/CORD-19-research-challenge/biorxiv_medrxiv/*.json")df_comm_use_subset_jsnfiles = glob.glob("Data/CORD-19-research-challenge/comm_use_subset/*.json")df_custom_license_jsnfiles = glob.glob("Data/CORD-19-research-challenge/custom_license/*.json")df_noncomm_use_subset_jsnfiles = glob.glob("Data/CORD-19-research-challenge/noncomm_use_subset/*.json")len(df_biorxiv_medrxiv_jsnfiles)len(df_comm_use_subset_jsnfiles)len(df_custom_license_jsnfiles)len(df_noncomm_use_subset_jsnfiles)